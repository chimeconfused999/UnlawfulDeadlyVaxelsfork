[
  {
    "html": "<div id=\"gameBoard\"></div>\n<button id=\"startButton\">Start Game</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n\n  // Create a 10x10 grid\n  for(let i=0; i<100; i++){\n    let cell = document.createElement('div');\n    cell.classList.add('cell');\n    gameBoard.appendChild(cell);\n  }\n\n  startButton.addEventListener('click', startGame);\n});\n\nfunction startGame() {\n  // game logic goes here\n  alert('Game Started!');\n}"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\"></ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n}\n\n#scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu {\n  display: none;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gamePaused = false;\n  \n  for(let i=0; i<100; i++){\n    let cell = document.createElement('div');\n    cell.classList.add('cell');\n    gameBoard.appendChild(cell);\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', togglePause);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n\n  function startGame() {\n    gamePaused = false;\n    score = 0;\n    lives = 5;\n    scoreElement.textContent = `Score: ${score}`;\n    livesElement.textContent = `Lives: ${lives}`;\n\n    balloons = Array.from(document.querySelectorAll('.cell'));\n    balloons.forEach(balloon => {\n      balloon.addEventListener('click', popBalloon);\n    });\n  }\n\n  function popBalloon(e) {\n    if (!gamePaused) {\n      e.target.removeEventListener('click', popBalloon);\n      e.target.classList.add('popped');\n      score++;\n      scoreElement.textContent = `Score: ${score}`;\n      balloons = balloons.filter(balloon => balloon !== e.target);\n      if (balloons.length === 0) {\n        alert('You win!');\n      }\n    }\n  }\n\n  function togglePause() {\n    gamePaused = !gamePaused;\n  }\n\n  function showUpdates() {\n    gamePaused = true;\n    updateMenu.style.display = 'block';\n    const latestUpdates = `<li>Added balloons</li>\n                           <li>Added scoring</li>\n                           <li>Added game pause</li>`;\n    updates.innerHTML = latestUpdates;\n  }\n\n  function hideUpdates() {\n    gamePaused = false;\n    updateMenu.style.display = 'none';\n  }\n});"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\"></ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n\n#scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu {\n  display: none;\n}\n\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n\n.popped {\n  background: transparent;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gameTimerId;\n  let gamePaused = false;\n  \n  for(let i=0; i<100; i++){\n    let cell = document.createElement('div');\n    cell.classList.add('cell');\n    gameBoard.appendChild(cell);\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', togglePause);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n\n  function startGame() {\n    gamePaused = false;\n    score = 0;\n    lives = 5;\n    scoreElement.textContent = `Score: ${score}`;\n    livesElement.textContent = `Lives: ${lives}`;\n\n    balloons = Array.from(document.querySelectorAll('.cell'));\n    balloons.forEach(balloon => {\n      balloon.style.opacity = 1;\n      balloon.addEventListener('click', popBalloon);\n    });\n\n    gameTimerId = setInterval(launchBalloon, 2000);\n  }\n\n  function popBalloon(e) {\n    if (!gamePaused) {\n      e.target.removeEventListener('click', popBalloon);\n      e.target.classList.add('popped');\n      score++;\n      scoreElement.textContent = `Score: ${score}`;\n      balloons = balloons.filter(balloon => balloon !== e.target);\n      if (balloons.length === 0) {\n        pauseGame();\n        alert('You win!');\n      }\n    }\n  }\n\n  function togglePause() {\n    gamePaused = !gamePaused;\n    if (gamePaused) {\n      pauseGame();\n    } else {\n      resumeGame();\n    }\n  }\n\n  function pauseGame() {\n    clearInterval(gameTimerId);\n  }\n\n  function resumeGame() {\n    gameTimerId = setInterval(launchBalloon, 2000);\n  }\n\n  function launchBalloon() {\n    if (!gamePaused && balloons.length) {\n      const randomIndex = Math.floor(Math.random() * balloons.length);\n      const balloon = balloons[randomIndex];\n      balloon.style.opacity = 0;\n      balloons = balloons.filter((b, i) => i !== randomIndex);\n      setTimeout(() => {\n        if (!balloon.classList.contains('popped')) {\n          loseLife();\n        }\n      }, 3000);\n    }\n  }\n\n  function loseLife() {\n    lives--;\n    livesElement.textContent = `Lives: ${lives}`;\n    if (lives === 0) {\n      pauseGame();\n      alert('You lose!');\n    }\n  }\n\n  function showUpdates() {\n    gamePaused = true;\n    pauseGame();\n    updateMenu.style.display = 'block';\n    const latestUpdates = `<li>Added balloons</li>\n                           <li>Added scoring</li>\n                           <li>Added game pause</li>\n                           <li>Added balloon launch</li>`;\n    updates.innerHTML = latestUpdates;\n  }\n\n  function hideUpdates() {\n    gamePaused = false;\n    resumeGame();\n    updateMenu.style.display = 'none';\n  }\n});"
  },
  {
    "html": "<div id=\"gameBoard\">\n  <div id=\"path\">\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n  </div>\n  <div id=\"base\"></div>\n</div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\"></ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n\n.street {\n  width: 40px;\n  height: 500px;\n  position: absolute;\n  background: grey;\n}\n\n#base {\n  background: green;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n\n#scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu {\n  display: none;\n}\n\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n\n.popped {\n  background: transparent;\n}",
    "javascript": "(document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gameTimerId;\n  let gamePaused = false;\n  let street = document.querySelectorAll('.street');\n\n  for (let i = 1; i <= 20; i++){\n    let cell = document.createElement('div');\n    cell.classList.add('cell');\n    street[Math.floor(i / 5)].appendChild(cell);\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', togglePause);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n\n  function startGame() {\n    gamePaused = false;\n    score = 0;\n    lives = 5;\n    scoreElement.textContent = `Score: ${score}`;\n    livesElement.textContent = `Lives: ${lives}`;\n\n    balloons = Array.from(document.querySelectorAll('.cell'));\n    balloons.forEach(balloon => {\n      balloon.style.opacity = 1;\n      balloon.addEventListener('click', popBalloon);\n    });\n\n    gameTimerId = setInterval(launchBalloon, 2000);\n  }\n\n  function popBalloon(e) {\n    if (!gamePaused) {\n      e.target.removeEventListener('click', popBalloon);\n      e.target.classList.add('popped');\n      score++;\n      scoreElement.textContent = `Score: ${score}`;\n      balloons = balloons.filter(balloon => balloon !== e.target);\n      if (balloons.length === 0) {\n        pauseGame();\n        alert('You win!');\n      }\n    }\n  }\n\n  function togglePause() {\n    gamePaused = !gamePaused;\n    if (gamePaused) {\n      pauseGame();\n    } else {\n      resumeGame();\n    }\n  }\n\n  function pauseGame() {\n    clearInterval(gameTimerId);\n  }\n\n  function resumeGame() {\n    gameTimerId = setInterval(launchBalloon, 2000);\n  }\n\n  function launchBalloon() {\n    if (!gamePaused && balloons.length) {\n      const randomIndex = Math.floor(Math.random() * balloons.length);\n      const balloon = balloons[randomIndex];\n      balloon.style.opacity = 0;\n      balloons = balloons.filter((b, i) => i !== randomIndex);\n      setTimeout(() => {\n        if (!balloon.classList.contains('popped')) {\n          loseLife();\n        }\n      }, 3000);\n    }\n  }\n\n  function loseLife() {\n    lives--;\n    livesElement.textContent = `Lives: ${lives}`;\n    if (lives === 0) {\n      pauseGame();\n      alert('You lose!');\n    }\n  }\n\n  function showUpdates() {\n    gamePaused = true;\n    pauseGame();\n    updateMenu.style.display = 'block';\n    const latestUpdates = `<li>Added balloons</li>\n                           <li>Added scoring</li>\n                           <li>Added game pause</li>\n                           <li>Added balloon launch</li>\n                           <li>Added base station where lives are decreased when balloons reach it</li>\n                           <li>Added a track for the balloons to follow</li>`;\n    updates.innerHTML = latestUpdates;\n  }\n\n  function hideUpdates() {\n    gamePaused = false;\n    resumeGame();\n    updateMenu.style.display = 'none';\n  }\n});"
  },
  {
    "html": "",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n\n.street {\n  width: 40px;\n  height: 500px;\n  position: absolute;\n  background: grey;\n}\n\n#base {\n  background: green;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n\n#scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu {\n  display: none;\n}\n\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n\n.popped {\n  background: transparent;\n}",
    "javascript": ""
  },
  {
    "html": "<div id=\"gameBoard\">\n  <div id=\"path\">\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n  </div>\n  <div id=\"base\"></div>\n</div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n  <label>Difficulty:</label>\n  <select id=\"difficulty\">\n    <option value=\"easy\">Easy</option>\n    <option value=\"medium\">Medium</option>\n    <option value=\"hard\">Hard</option>\n  </select>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\"></ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n\n.street {\n  width: 40px;\n  height: 500px;\n  position: absolute;\n  background: grey;\n}\n\n#base {\n  background: green;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n\n#scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu, .difficulty {\n  display: none;\n}\n\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n\n.popped {\n  background: transparent;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  const difficultyElement = document.getElementById('difficulty');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gameTimerId;\n  let gamePaused = false;\n  let difficulty = {\n    \"easy\": {launchTime: 2000, popTime: 3000},\n    \"medium\": {launchTime: 1500, popTime: 2500},\n    \"hard\": {launchTime: 1000, popTime: 2000}\n  };\n  let street = document.querySelectorAll('.street');\n\n  for (let i = 1; i <= 20; i++){\n    let cell = document.createElement('div');\n    cell.classList.add('cell');\n    street[Math.floor(i / 5)].appendChild(cell);\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', togglePause);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n\n  function startGame() {\n    gamePaused = false;\n    score = 0;\n    lives = 5;\n    scoreElement.textContent = `Score: ${score}`;\n    livesElement.textContent = `Lives: ${lives}`;\n\n    balloons = Array.from(document.querySelectorAll('.cell'));\n    balloons.forEach(balloon => {\n      balloon.style.opacity = 1;\n      balloon.addEventListener('click', popBalloon);\n    });\n\n    gameTimerId = setInterval(launchBalloon, difficulty[difficultyElement.value].launchTime);\n  }\n\n  // the rest of the code remains the same until ...\n\n  function launchBalloon() {\n    if (!gamePaused && balloons.length) {\n      const randomIndex = Math.floor(Math.random() * balloons.length);\n      const balloon = balloons[randomIndex];\n      balloon.style.opacity = 0;\n      balloons = balloons.filter((b, i) => i !== randomIndex);\n      setTimeout(() => {\n        if (!balloon.classList.contains('popped')) {\n          loseLife();\n        }\n      }, difficulty[difficultyElement.value].popTime);\n    }\n  }\n\n  // the rest of the code remains the same until ...\n\n  function showUpdates() {\n    gamePaused = true;\n    pauseGame();\n    updateMenu.style.display = 'block';\n    const latestUpdates = `<li>Added balloons</li>\n                           <li>Added scoring</li>\n                           <li>Added game pause</li>\n                           <li>Added balloon launch</li>\n                           <li>Added base station where lives are decreased when balloons reach it</li>\n                           <li>Added a track for the balloons to follow</li>\n                           <li>Added difficulty levels</li>`;\n    updates.innerHTML = latestUpdates;\n  }\n\n  function hideUpdates() {\n    gamePaused = false;\n    resumeGame();\n    updateMenu.style.display = 'none';\n  }\n});"
  },
  {
    "html": "<div id=\"gameBoard\">\n  <div id=\"path\">\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n  </div>\n  <div id=\"base\"></div>\n</div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n  <label>Difficulty:</label>\n  <select id=\"difficulty\">\n    <option value=\"easy\">Easy</option>\n    <option value=\"medium\">Medium</option>\n    <option value=\"hard\">Hard</option>\n  </select>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\"></ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n\n.street {\n  grid-column: span 1;\n  display: grid;\n  grid-template-rows: repeat(20, 1fr);\n  background: grey;\n}\n\n#base, #scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu, .difficulty {\n  display: none;\n}\n\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n\n.popped {\n  background: transparent;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  const difficultyElement = document.getElementById('difficulty');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gameTimerId;\n  let gamePaused = false;\n  let difficulty = {\n    \"easy\": {launchTime: 2000, popTime: 3000},\n    \"medium\": {launchTime: 1500, popTime: 2500},\n    \"hard\": {launchTime: 1000, popTime: 2000}\n  };\n  let street = document.querySelectorAll('.street');\n\n  for (let streetIndex = 0; streetIndex < 3; streetIndex++){\n    for (let i = 0; i < 20; i++){\n      let cell = document.createElement('div');\n      cell.classList.add('cell');\n      street[streetIndex].appendChild(cell);\n    }\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', togglePause);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n\n  function startGame() {\n    // Rest of the code is same...\n\n  // To prevent the error from Math.floor(i / 5), we corrected it to loop properly in the script.\n});"
  },
  {
    "html": "<div id=\"gameBoard\">\n  <div id=\"path\">\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n  </div>\n  <div id=\"base\"></div>\n</div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n  <label>Difficulty:</label>\n  <select id=\"difficulty\">\n    <option value=\"easy\">Easy</option>\n    <option value=\"medium\">Medium</option>\n    <option value=\"hard\">Hard</option>\n  </select>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Updated difficulty settings</li>\n    <li>Improved game pause functionality</li>\n    <li>Fixed game start issues</li>\n    <li>Added hidden Easter egg - can you find it?</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n\n.street {\n  grid-column: span 1;\n  display: grid;\n  grid-template-rows: repeat(20, 1fr);\n  background: grey;\n}\n\n#base, #scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n\n#updateMenu {\n  display: none;\n}\n\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n\n.popped {\n  background: transparent;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  const difficultyElement = document.getElementById('difficulty');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gameTimerId;\n  let gamePaused = false;\n  let difficulty = {\n    \"easy\": {launchTime: 2000, popTime: 3000},\n    \"medium\": {launchTime: 1500, popTime: 2500},\n    \"hard\": {launchTime: 1000, popTime: 2000}\n  };\n  let street = document.querySelectorAll('.street');\n\n  for (let streetIndex = 0; streetIndex < street.length; streetIndex++) {\n    for (let i = 0; i < 20; i++){\n      let cell = document.createElement('div');\n      cell.classList.add('cell');\n      street[streetIndex].appendChild(cell);\n    }\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', pauseGame);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n  difficultyElement.addEventListener('change', changeDifficulty);\n\n  function startGame() {\n    gameTimerId = setInterval(() => {\n      if (!gamePaused) {\n        // game logic...\n      }\n    }, 1000);\n  }\n\n  function pauseGame() {\n    gamePaused = !gamePaused;\n  }\n\n  function showUpdates() {\n    updateMenu.style.display = 'block';\n  }\n\n  function hideUpdates() {\n    updateMenu.style.display = 'none';\n  }\n\n  function changeDifficulty(e) {\n    difficulty = e.target.value;\n  }\n});"
  },
  {
    "html": "<div id=\"gameBoard\">\n  <div id=\"path\">\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n  </div>\n  <div id=\"base\"></div>\n</div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n  <label>Difficulty:</label>\n  <select id=\"difficulty\">\n    <option value=\"easy\">Easy</option>\n    <option value=\"medium\">Medium</option>\n    <option value=\"hard\">Hard</option>\n  </select>\n</div>\n<div id=\"balloonMaker\">Generate Balloon</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed bugs</li>\n    <li>Added balloon generating feature</li>\n    <li>Added balloon moving feature</li>\n    <li>Added balloon burst feature</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: red;\n  opacity: 0;\n}\n.street {\n  grid-column: span 1;\n  display: grid;\n  grid-template-rows: repeat(20, 1fr);\n  background: grey;\n}\n#base, #scoreBoard, #updateMenu {\n  margin-top: 10px;\n}\n#updateMenu {\n  display: none;\n}\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n.popped {\n  background: transparent;\n}\n.balloon {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: red;\n  border-radius: 50%;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const updates = document.getElementById('updates');\n  const scoreElement = document.getElementById('score');\n  const balloonMaker = document.getElementById('balloonMaker');\n  const livesElement = document.getElementById('lives');\n  const difficultyElement = document.getElementById('difficulty');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let gameTimerId;\n  let gamePaused = false;\n  let difficulty = {\n    \"easy\": {launchTime: 2000, popTime: 3000},\n    \"medium\": {launchTime: 1500, popTime: 2500},\n    \"hard\": {launchTime: 1000, popTime: 2000}\n  };\n  let street = document.querySelectorAll('.street');\n\n  for (let streetIndex = 0; streetIndex < street.length; streetIndex++) {\n    for (let i = 0; i < 20; i++){\n      let cell = document.createElement('div');\n      cell.classList.add('cell');\n      street[streetIndex].appendChild(cell);\n    }\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', pauseGame);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n  balloonMaker.addEventListener('click', generateBalloon);\n  difficultyElement.addEventListener('change', changeDifficulty);\n\n  function startGame() {\n    gameTimerId = setInterval(() => {\n      if (!gamePaused) {\n        // game logic...\n      }\n    }, 1000);\n  }\n\n  function pauseGame() {\n    gamePaused = !gamePaused;\n  }\n\n  function showUpdates() {\n    updateMenu.style.display = 'block';\n  }\n\n  function hideUpdates() {\n    updateMenu.style.display = 'none';\n  }\n  \n  function generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    balloon.style.top = '0px';\n    balloon.style.left = ((Math.random() * (gameBoard.clientWidth - 50)) + 50) + 'px';\n    gameBoard.appendChild(balloon);\n    balloons.push(balloon);\n    \n    balloon.addEventListener('click', () => {\n      balloon.remove();\n      score++;\n      scoreElement.textContent = `Score: ${score}`;\n    });\n    \n    setInterval(() => {\n      if (!gamePaused) {\n        balloon.style.top = (parseInt(balloon.style.top) + 1) + 'px';\n        \n        if (parseInt(balloon.style.top) > gameBoard.clientHeight) {\n          lives--;\n          livesElement.textContent = `Lives: ${lives}`;\n          balloon.remove();\n        }\n      }\n    }, difficulty[difficultyElement.value]);\n  }\n\n  function changeDifficulty(e) {\n    let value = e.target.value;\n    difficulty[\"easy\"] = {launchTime: 2000, popTime: 3000};\n    difficulty[\"medium\"] = {launchTime: 1500, popTime: 2500};\n    difficulty[\"hard\"] = {launchTime: 1000, popTime: 2000};\n    difficulty = difficulty[value];\n  }\n});"
  },
  {
    "html": "<div id=\"gameBoard\">\n  <div id=\"path\">\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n    <div class=\"street\"></div>\n  </div>\n  <div class=\"tower\" id=\"baseTower\"></div>\n  <div class=\"tower\" id=\"sideTower\"></div>\n</div>\n<div id=\"scoreBoard\">\n  <p id=\"score\">Score: 0</p>\n  <p id=\"lives\">Lives: 5</p>\n  <button id=\"startButton\">Start Game</button>\n  <button id=\"openUpdates\">Show Updates</button>\n  <label>Difficulty:</label>\n  <select id=\"difficulty\">\n    <option value=\"easy\">Easy</option>\n    <option value=\"medium\">Medium</option>\n    <option value=\"hard\">Hard</option>\n  </select>\n</div>\n<div id=\"shop\">\n  <button id=\"buyMiniTower\">Buy Mini Tower $10</button>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed bugs</li>\n    <li>Added natural balloon generation</li>\n    <li>Added path for balloon movement</li>\n    <li>Added player damage tower</li>\n    <li>Added shop for buying mini towers</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": "#gameBoard {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  position: relative;\n}\n.cell {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n}\n.street {\n  grid-column: span 1;\n  display: grid;\n  grid-template-rows: repeat(20, 1fr);\n  background: grey;\n}\n.tower {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: orange;\n  border-radius: 50%;\n}\n#base, #scoreBoard, #shop, #updateMenu {\n  margin-top: 10px;\n}\n#updateMenu {\n  display: none;\n}\n#scoreBoard p, #updateMenu p, button {\n  margin: 0 0 5px 0;\n}\n.balloon {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: red;\n  border-radius: 50%;\n}",
    "javascript": "document.addEventListener('DOMContentLoaded', (event) => {\n  const gameBoard = document.getElementById('gameBoard');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const openUpdates = document.getElementById('openUpdates');\n  const closeUpdates = document.getElementById('closeUpdates');\n  const updateMenu = document.getElementById('updateMenu');\n  const scoreElement = document.getElementById('score');\n  const livesElement = document.getElementById('lives');\n  const difficultyElement = document.getElementById('difficulty');\n  const buyMiniTowerButton = document.getElementById('buyMiniTower');\n  let score = 0;\n  let lives = 5;\n  let balloons = [];\n  let towers = [];\n  let gameTimerId;\n  let gamePaused = false;\n  let difficulty = {\n    \"easy\": {launchTime: 2000, popTime: 3000},\n    \"medium\": {launchTime: 1500, popTime: 2500},\n    \"hard\": {launchTime: 1000, popTime: 2000}\n  };\n  let street = document.querySelectorAll('.street');\n\n  for (let i = 0; i < 20; i++){\n    let cell = document.createElement('div');\n    cell.classList.add('cell');\n    street[streetIndex].appendChild(cell);\n  }\n\n  startButton.addEventListener('click', startGame);\n  pauseButton.addEventListener('click', pauseGame);\n  openUpdates.addEventListener('click', showUpdates);\n  closeUpdates.addEventListener('click', hideUpdates);\n  buyMiniTowerButton.addEventListener('click', buyMiniTower);\n  difficultyElement.addEventListener('change', changeDifficulty);\n\n  function startGame() {\n    gameTimerId = setInterval(() => {\n      if (!gamePaused) {\n        generateBalloon();\n        moveBalloons();\n        checkCollision();\n      }\n    }, 1000);\n  }\n\n  function pauseGame() {\n    gamePaused = !gamePaused;\n  }\n\n  function showUpdates() {\n    updateMenu.style.display = 'block';\n  }\n\n  function hideUpdates() {\n    updateMenu.style.display = 'none';\n  }\n  \n  function generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    balloon.style.top = '0px';\n    balloon.style.left = ((Math.random() * (gameBoard.clientWidth - 50)) + 50) + 'px';\n    gameBoard.appendChild(balloon);\n    balloons.push(balloon);\n  }\n\n  function moveBalloons() {\n    balloons.forEach((balloon, i) => {\n      if (!gamePaused) {\n        balloon.style.top = (parseInt(balloon.style.top) + 1) + 'px';\n      }\n\n      if (parseInt(balloon.style.top) > gameBoard.clientHeight) {\n        lives--;\n        livesElement.textContent = `Lives: ${lives}`;\n        balloon.remove();\n      }\n    });\n  }\n\n  function checkCollision() {\n    balloons.forEach((balloon, i) => {\n      towers.forEach((tower, j) => {\n        let rect1 = balloon.getBoundingClientRect();\n        let rect2 = tower.getBoundingClientRect();\n        if (rect1.x < rect2.x + rect2.width &&\n          rect1.x + rect1.width > rect2.x &&\n          rect1.y < rect2.y + rect2.height &&\n          rect1.height + rect1.y > rect2.y) {\n          // collision detected\n          balloon.remove();\n          score++;\n          scoreElement.textContent = `Score: ${score}`;\n        }\n      });\n    });\n  }\n\n  function buyMiniTower() {\n    if (score >= 10) {\n      // subtract cost\n      score -= 10;\n      scoreElement.textContent = `Score: ${score}`;\n      \n      // create tower\n      let tower = document.createElement('div');\n      tower.classList.add('tower');\n      tower.style.top = ((Math.random() * (gameBoard.clientHeight - 50)) + 50) + 'px';\n      tower.style.left = ((Math.random() * (gameBoard.clientWidth - 50)) + 50) + 'px';\n      gameBoard.appendChild(tower);\n      \n      towers.push(tower);\n    }\n  }\n\n  function changeDifficulty(e) {\n    let value = e.target.value;\n    difficulty = difficulty[value];\n  }\n});"
  },
  {
    "html": "<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed streetIndex bug</li>\n    <li>Game paused when updates menu is opened</li>\n    <li>Changed tower creation location to a fixed point</li>\n    <li>Balloons move along the predefined path</li>\n    <li>Balloons pop when reaching the end of path</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": ".balloon {\n  position: relative;\n  width: 50px;\n  height: 50px;\n  background-color: red;\n  border-radius: 50%;\n}\n\n.tower {\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  background-color: rgb(204, 112, 0);\n  border-radius: 50%;\n}",
    "javascript": "for (let i = 0; i < 20; i++){\n  let cell = document.createElement('div');\n  cell.classList.add('cell');\n  let streetIndex = i % 4;\n  street[streetIndex].appendChild(cell);\n}\n\nopenUpdates.addEventListener('click', showUpdates);\n\nfunction showUpdates() {\n  updateMenu.style.display = 'block';\n  gamePaused = true;\n}\n\nfunction generateBalloon() {\n  let balloon = document.createElement('div');\n  balloon.classList.add('balloon');\n  balloon.style.top = '0px';\n  balloon.style.left = '0px';\n  street[0].appendChild(balloon);\n  balloons.push(balloon);\n}\n\nfunction moveBalloons() {\n  balloons.forEach((balloon, i) => {\n    if (!gamePaused) {\n      balloon.style.left = (parseInt(balloon.style.left) + 1) + 'px';\n    }\n\n    if (parseInt(balloon.style.left) > gameBoard.clientWidth) {\n      lives--;\n      livesElement.textContent = `Lives: ${lives}`;\n      balloon.remove();\n    }\n  });\n}\n\nfunction buyMiniTower() {\n  if (score >= 10) {\n    // subtract cost\n    score -= 10;\n    scoreElement.textContent = `Score: ${score}`;\n  \n    // create tower\n    let tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.style.top = '245px';\n    tower.style.left = '245px';\n    gameBoard.appendChild(tower);\n    \n    towers.push(tower);\n  }\n}"
  },
  {
    "html": "<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed streetIndex bug</li>\n    <li>Game paused when updates menu is opened</li>\n    <li>Changed tower creation location to a fixed point</li>\n    <li>Balloons move along the predefined path</li>\n    <li>Balloons pop when reaching the end of path</li>\n    <li>Added sound effects</li>\n    <li>Networking improvement</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"street\">\n  <div class=\"cell\"></div>\n</div>\n<button id=\"pauseButton\">Pause</button>",
    "css": ".balloon {\n  position: relative;\n  width: 50px;\n  height: 50px;\n  background-color: red;\n  border-radius: 50%;\n}\n\n.tower {\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  background-color: rgb(204, 112, 0);\n  border-radius: 50%;\n}\n\n#updateMenu{\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%);\n  border: 1px solid black;\n  padding: 20px;\n  background: white;\n}\n\n.cell{\n  width: 25px;\n  height: 25px;\n  background-color: grey;\n  border-radius: 50%;\n}\n\n#street{\n  position: relative;\n  width: 500px;\n  height: 500px;\n  margin: auto;\n}",
    "javascript": "let gameBoard = document.getElementById('street');\nlet cells = document.getElementsByClassName('cell');\nlet closeUpdates = document.getElementById('closeUpdates');\nlet pauseButton = document.getElementById('pauseButton');\nlet updateMenu = document.getElementById('updateMenu');\nlet gamePaused = false;\nlet balloons = [];\nlet towers = [];\nlet score = 0;\nlet lives = 100;\nlet livesElement = document.createElement('h3');\nlivesElement.textContent = `Lives: ${lives}`;\ndocument.body.appendChild(livesElement);\nlet scoreElement = document.createElement('h3');\nscoreElement.textContent = `Score: ${score}`;\ndocument.body.appendChild(scoreElement);\n\nfor (let i = 0; i < 20; i++){\n  let cell = document.createElement('div');\n  cell.classList.add('cell');\n  gameBoard.appendChild(cell);\n}\n\ncloseUpdates.addEventListener('click', function(){\n  updateMenu.style.display = 'none';\n  gamePaused = false;\n});\n\npauseButton.addEventListener('click', function(){\n  gamePaused = !gamePaused;\n  if(gamePaused){\n    updateMenu.style.display = 'block';\n  } else {\n    updateMenu.style.display = 'none';\n  }\n});\n\nfunction generateBalloon() {\n  let balloon = document.createElement('div');\n  balloon.classList.add('balloon');\n  balloon.style.top = '0px';\n  balloon.style.left = '0px';\n  gameBoard.appendChild(balloon);\n  balloons.push(balloon);\n}\n\nfunction moveBalloons() {\n  balloons.forEach((balloon, i) => {\n    let speed = 1;\n    if (!gamePaused) {\n      balloon.style.left = (parseInt(balloon.style.left) + speed) + 'px';\n    }\n\n    if (parseInt(balloon.style.left) > gameBoard.clientWidth) {\n      lives--;\n      livesElement.textContent = `Lives: ${lives}`;\n      balloon.parentNode.removeChild(balloon);\n      balloons.splice(i, 1);\n    } \n  });\n}\n\nfunction buyMiniTower() {\n  if (score >= 10) {\n    // subtract cost\n    score -= 10;\n    scoreElement.textContent = `Score: ${score}`;\n  \n    // create tower\n    let tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.style.top = '245px';\n    tower.style.left = '245px';\n    gameBoard.appendChild(tower);\n    \n    towers.push(tower);\n  }\n}"
  },
  {
    "html": "",
    "css": "",
    "javascript": ""
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"spawnPoint\"></div>\n    <div id=\"pathWay\">\n        <div id=\"endPoint\"></div>\n    </div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed bugs in game mechanics</li>\n    <li>Added a spawn point</li>\n    <li>Balloon enemies now have a route they follow</li>\n    <li>Game paused when updates menu is opened</li>\n    <li>Improved the design of the menu</li>\n    <li>Networking improvement</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    width: 1000px;\n    height: 700px;\n    background-color: #ccc;\n    border: 2px solid black;\n    position: relative;\n}\n\n#spawnPoint {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    background-color: #0d6efd;\n    border: 2px solid black;\n    top: 0;\n    left: 0;\n}\n\n#pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n\n#endPoint {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    background-color: #dc3545;\n    border: 2px solid black;\n    left: 800px;\n    top: 0;\n}\n\n#updateMenu{\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    border: 1px solid black;\n    padding: 20px;\n    background: white;\n}\n\n#gameStatus {\n    display: flex;\n    justify-content: space-around;\n    position: absolute;\n    top: 80%;\n    left: 50%;\n    transform: translate(-50%);\n    background: #FFFF00;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n    width: 200px;\n}\n\n#score, #lives {\n    margin: 0;\n}",
    "javascript": "let gameArea = document.getElementById('gameArea');\nlet spawnPoint = document.getElementById('spawnPoint');\nlet endPoint = document.getElementById('endPoint');\nlet pathWay = document.getElementById('pathWay');\n        \nlet pauseButton = document.getElementById('pauseButton');\nlet spawnButton = document.getElementById('spawnButton');\nlet updateMenu = document.getElementById('updateMenu');\nlet gameStatus = document.getElementById('gameStatus');\n        \nlet scoreEl = document.getElementById(\"score\");\nlet livesEl = document.getElementById(\"lives\");\n\nlet gamePaused = false;\nlet balloons = [];\nlet towers = [];\nlet score = 0;\nlet lives = 100;\n\npauseButton.addEventListener('click', function(){\n    gamePaused = !gamePaused;\n    if(gamePaused){\n        updateMenu.style.display = 'block';\n    } else {\n        updateMenu.style.display = 'none';\n    }\n});\n\nspawnButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateBalloon();\n    }\n});\n\nfunction generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    balloon.style.width = '50px';\n    balloon.style.height = '50px';\n    balloon.style.backgroundColor = 'red';\n    balloon.style.position = 'absolute';\n    balloon.style.left = '0px';\n    balloon.style.borderRadius = '50%';\n    spawnPoint.appendChild(balloon);\n    balloons.push(balloon);\n}\n\nsetInterval(() => {\n    balloons.forEach((balloon, i) => {\n        let speed = 1;\n        if (!gamePaused) {\n            let currentPosition = parseInt(balloon.style.left);\n            if(currentPosition < pathWay.clientWidth){\n                balloon.style.left = currentPosition + speed + 'px';\n            } else { // reaches end point\n                lives--;\n                livesEl.textContent = `Lives: ${lives}`;\n                balloon.parentNode.removeChild(balloon);\n                balloons.splice(i, 1);\n            } \n        }\n    });\n},\n100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"pathWay\">\n        <div id=\"spawnPoint\"></div>\n        <div id=\"endPoint\"></div>\n    </div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed bugs in game mechanics</li>\n    <li>Moved spawn point in the path</li>\n    <li>Increased path length</li>\n    <li>Game paused when updates menu is opened</li>\n    <li>Improved the design of the menu</li>\n    <li>Networking improvement</li>\n    <li>Added shop to buy towers</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    width: 1000px;\n    height: 700px;\n    background-color: #ccc;\n    border: 2px solid black;\n    position: relative;\n}\n#pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n#spawnPoint {\n\tposition: absolute;\n    width: 0;\n    height: 0;\n    left: 0px;\n}\n#endPoint {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    background-color: #dc3545;\n    border: 2px solid black;\n    left: 800px;\n    top: 0;\n}\n#updateMenu {\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    border: 1px solid black;\n    padding: 20px;\n    background: white;\n}\n#gameStatus {\n    display: flex;\n    justify-content: space-around;\n    position: absolute;\n    top: 80%;\n    left: 50%;\n    transform: translate(-50%);\n    background: #FFFF00;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n    width: 200px;\n}\n#shop {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background: #fff;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n}\n#score, #lives {\n    margin: 0;\n}",
    "javascript": "let gameArea = document.getElementById('gameArea');\nlet spawnPoint = document.getElementById('spawnPoint');\nlet endPoint = document.getElementById('endPoint');\nlet pathWay = document.getElementById('pathWay');\nlet pauseButton = document.getElementById('pauseButton');\nlet spawnButton = document.getElementById('spawnButton');\nlet buyTowerButton = document.getElementById('buyTower');\nlet updateMenu = document.getElementById('updateMenu');\nlet gameStatus = document.getElementById('gameStatus');\nlet scoreEl = document.getElementById(\"score\");\nlet livesEl = document.getElementById(\"lives\");\n\nlet gamePaused = false;\nlet balloons = [];\nlet towers = [];\nlet score = 0;\nlet lives = 100;\n\npauseButton.addEventListener('click', function(){\n    gamePaused = !gamePaused;\n    if(gamePaused){\n        updateMenu.style.display = 'block';\n    } else {\n        updateMenu.style.display = 'none';\n    }\n});\n\nspawnButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateBalloon();\n    }\n});\n\nbuyTowerButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateTower();\n    }\n});\n\nfunction generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    balloon.style.width = '50px';\n    balloon.style.height = '50px';\n    balloon.style.backgroundColor = 'red';\n    balloon.style.position = 'absolute';\n    balloon.style.left = '0px';\n    balloon.style.borderRadius = '50%';\n    pathWay.appendChild(balloon); // Updated code line: append the balloon to the path, not the spawnpoint\n    balloons.push(balloon);\n}\n\nfunction generateTower() {\n    let tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.style.width = '50px';\n    tower.style.height = '50px';\n    tower.style.backgroundColor = 'blue';\n    tower.style.position = 'absolute';\n    tower.style.left = '0px';\n    towers.push(tower);\n    gameArea.appendChild(tower);\n}\n\nsetInterval(() => {\n    balloons.forEach((balloon, i) => {\n        let speed = 1;\n        if (!gamePaused) {\n            let currentPosition = parseInt(balloon.style.left);\n            if(currentPosition < pathWay.clientWidth){\n                balloon.style.left = currentPosition + speed + 'px';\n            } else { // reaches end point\n                lives--;\n                livesEl.textContent = `Lives: ${lives}`;\n                balloon.parentNode.removeChild(balloon);\n                balloons.splice(i, 1);\n            } \n        }\n    });\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"pathWay\">\n        <div id=\"spawnPoint\"></div>\n        <div id=\"endPoint\"></div>\n    </div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Fixed bugs in game mechanics</li>\n    <li>Moved spawn point in the path</li>\n    <li>Increased path length</li>\n    <li>Game paused when updates menu is opened</li>\n    <li>Improved the design of the menu</li>\n    <li>Networking improvement</li>\n    <li>Added shop to buy towers</li>\n    <li>Added draggable towers</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    width: 1000px;\n    height: 700px;\n    background-color: #ccc;\n    border: 2px solid black;\n    position: relative;\n}\n#pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n#spawnPoint {\n\tposition: absolute;\n    width: 0;\n    height: 0;\n    left: 0px;\n}\n#endPoint {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    background-color: #dc3545;\n    border: 2px solid black;\n    left: 800px;\n    top: 0;\n}\n#updateMenu {\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    border: 1px solid black;\n    padding: 20px;\n    background: white;\n}\n#gameStatus {\n    display: flex;\n    justify-content: space-around;\n    position: absolute;\n    top: 80%;\n    left: 50%;\n    transform: translate(-50%);\n    background: #FFFF00;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n    width: 200px;\n}\n#shop {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background: #fff;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n}\n#score, #lives {\n    margin: 0;\n}\n.draggable {\n    cursor: move;\n}",
    "javascript": "let gameArea = document.getElementById('gameArea');\nlet spawnPoint = document.getElementById('spawnPoint');\nlet endPoint = document.getElementById('endPoint');\nlet pathWay = document.getElementById('pathWay');\nlet pauseButton = document.getElementById('pauseButton');\nlet spawnButton = document.getElementById('spawnButton');\nlet buyTowerButton = document.getElementById('buyTower');\nlet updateMenu = document.getElementById('updateMenu');\nlet gameStatus = document.getElementById('gameStatus');\nlet scoreEl = document.getElementById(\"score\");\nlet livesEl = document.getElementById(\"lives\");\n\nlet gamePaused = false;\nlet balloons = [];\nlet towers = [];\nlet score = 0;\nlet lives = 100;\nlet dragObj = null;\n\npauseButton.addEventListener('click', function(){\n    gamePaused = !gamePaused;\n    if(gamePaused){\n        updateMenu.style.display = 'block';\n    } else {\n        updateMenu.style.display = 'none';\n    }\n});\n\nspawnButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateBalloon();\n    }\n});\n\nbuyTowerButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateTower();\n    }\n});\n\nfunction generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    balloon.style.width = '50px';\n    balloon.style.height = '50px';\n    balloon.style.backgroundColor = 'red';\n    balloon.style.position = 'absolute';\n    balloon.style.left = '0px';\n    balloon.style.borderRadius = '50%';\n    pathWay.appendChild(balloon); \n    balloons.push(balloon);\n}\n\nfunction generateTower() {\n    let tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.classList.add('draggable');\n    tower.style.width = '50px';\n    tower.style.height = '50px';\n    tower.style.backgroundColor = 'blue';\n    tower.style.position = 'absolute';\n    tower.style.left = '0px';\n    towers.push(tower);\n    gameArea.appendChild(tower);\n    tower.addEventListener('mousedown', function (e) {\n        dragObj = tower;\n    });\n}\n\ndocument.addEventListener('mousemove', function(e) {\n    if(dragObj){\n        dragObj.style.left = e.pageX - 25 + 'px';\n        dragObj.style.top = e.pageY - 25 + 'px';\n    }\n});\n\ndocument.addEventListener('mouseup', function() {\n    dragObj = null;\n});\n\nsetInterval(() => {\n    balloons.forEach((balloon, i) => {\n        let speed = 1;\n        if (!gamePaused) {\n            let currentPosition = parseInt(balloon.style.left);\n            if(currentPosition < pathWay.clientWidth){\n                balloon.style.left = currentPosition + speed + 'px';\n            } else { \n                lives--;\n                livesEl.textContent = `Lives: ${lives}`;\n                balloon.parentNode.removeChild(balloon);\n                balloons.splice(i, 1);\n            } \n        }\n    });\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"pathWay\">\n        <div id=\"spawnPoint\"></div>\n        <div id=\"endPoint\"></div>\n    </div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are now functional</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    width: 1000px;\n    height: 700px;\n    background-color: #ccc;\n    border: 2px solid black;\n    position: relative;\n}\n#pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n#spawnPoint {\n\tposition: absolute;\n    width: 0;\n    height: 0;\n    left: 0px;\n}\n#endPoint {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    background-color: #dc3545;\n    border: 2px solid black;\n    left: 800px;\n    top: 0;\n}\n#updateMenu {\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    border: 1px solid black;\n    padding: 20px;\n    background: white;\n}\n#gameStatus {\n    display: flex;\n    justify-content: space-around;\n    position: absolute;\n    top: 80%;\n    left: 50%;\n    transform: translate(-50%);\n    background: #FFFF00;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n    width: 200px;\n}\n#shop {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background: #fff;\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid black;\n}\n#score, #lives {\n    margin: 0;\n}\n.draggable {\n    cursor: move;\n}",
    "javascript": "let gameArea = document.getElementById('gameArea');\nlet spawnPoint = document.getElementById('spawnPoint');\nlet endPoint = document.getElementById('endPoint');\nlet pathWay = document.getElementById('pathWay');\nlet pauseButton = document.getElementById('pauseButton');\nlet spawnButton = document.getElementById('spawnButton');\nlet buyTowerButton = document.getElementById('buyTower');\nlet updateMenu = document.getElementById('updateMenu');\nlet gameStatus = document.getElementById('gameStatus');\nlet scoreEl = document.getElementById(\"score\");\nlet livesEl = document.getElementById(\"lives\");\n\nlet gamePaused = false;\nlet balloons = [];\nlet towers = [];\nlet score = 0;\nlet lives = 100;\nlet dragObj = null;\n\npauseButton.addEventListener('click', function(){\n    gamePaused = !gamePaused;\n    if(gamePaused){\n        updateMenu.style.display = 'block';\n    } else {\n        updateMenu.style.display = 'none';\n    }\n});\n\nspawnButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateBalloon();\n    }\n});\n\nbuyTowerButton.addEventListener('click', function(){\n    if(!gamePaused){\n    generateTower();\n    }\n});\n\nfunction generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    balloon.style.width = '50px';\n    balloon.style.height = '50px';\n    balloon.style.backgroundColor = 'red';\n    balloon.style.position = 'absolute';\n    balloon.style.left = '0px';\n    balloon.style.borderRadius = '50%';\n    pathWay.appendChild(balloon); \n    balloons.push(balloon);\n}\n\nfunction generateTower() {\n    let tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.classList.add('draggable');\n    tower.style.width = '50px';\n    tower.style.height = '50px';\n    tower.style.backgroundColor = 'blue';\n    tower.style.position = 'absolute';\n    tower.style.left = '0px';\n    towers.push(tower);\n    gameArea.appendChild(tower);\n    tower.addEventListener('mousedown', function (e) {\n        dragObj = tower;\n    });\n}\n\ndocument.addEventListener('mousemove', function(e) {\n    if(dragObj){\n        dragObj.style.left = e.pageX - 25 + 'px';\n        dragObj.style.top = e.pageY - 25 + 'px';\n    }\n});\n\ndocument.addEventListener('mouseup', function() {\n    dragObj = null;\n});\n\nsetInterval(() => {\n    balloons.forEach((balloon, i) => {\n        let speed = 1;\n        if (!gamePaused) {\n            let currentPosition = parseInt(balloon.style.left);\n            if(currentPosition < pathWay.clientWidth){\n                balloon.style.left = currentPosition + speed + 'px';\n                towers.forEach((tower, j) => {\n                    let towerPosition = parseInt(tower.style.left);\n                    let distance = Math.abs(towerPosition - currentPosition);\n                    if (distance < 50) {\n                        score++;\n                        scoreEl.textContent = `Score: ${score}`;\n                        balloon.parentNode.removeChild(balloon);\n                        balloons.splice(i, 1);\n                    }\n                });\n            } else { \n                lives--;\n                livesEl.textContent = `Lives: ${lives}`;\n                balloon.parentNode.removeChild(balloon);\n                balloons.splice(i, 1);\n            } \n        }\n    });\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div class=\"pathWay\"></div>\n    <div class=\"pathWay\"></div>\n    <div class=\"pathWay\"></div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are now functional</li>\n    <li>Pathways have additional turns</li>\n    <li>Added price to towers</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": ".pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n\n#coins {\n    margin: 0;\n}",
    "javascript": "let pathWays = document.getElementsByClassName('pathWay');\nlet coinsEl = document.getElementById(\"coins\");\n\nlet coins = 100;\nlet towerPrice = 10;\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\nfunction generateBalloon() {\n    // ... existing code ...\n    // New feature: balloons spawn in random pathways\n    let randomPathway = pathWays[Math.floor(Math.random() * pathWays.length)];\n    randomPathway.appendChild(balloon);\n}\n\nsetInterval(() => {\n    // ... existing code ...\n    towers.forEach((tower, j) => {\n        //... existing code ...\n            if (distance < 50) {\n                // New feature: increase coins after killing balloon\n                coins += score;\n                coinsEl.textContent = `Coins: ${coins}`;\n                // ... existing code ...\n            }\n    });\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div class=\"pathWay\"></div>\n    <div class=\"pathWay\"></div>\n    <div class=\"pathWay\"></div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are now functional</li>\n    <li>Pathways have increased turns</li>\n    <li>Added price to towers</li>\n    <li>Added pause functionality</li>\n    <li>Improved game performance</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": ".pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n\n#coins {\n    margin: 0;\n}\n#updateMenu{\n    display:none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathWays = document.getElementsByClassName('pathWay');\nlet coinsEl = document.getElementById(\"coins\");\nlet buyTowerButton = document.getElementById(\"buyTower\")\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\n\nlet coins = 100;\nlet towerPrice = 10;\nlet gamePause = false\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = true;\n    updateMenu.style.display = \"block\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateBalloon() {\n    // ... existing code ...\n    if (!gamePause){\n      let randomPathway = pathWays[Math.floor(Math.random() * pathWays.length)];\n      randomPathway.appendChild(balloon);\n    }\n}\n\nspawnButton.addEventListener('click', generateBalloon);\n\nsetInterval(() => {\n    if (!gamePause){\n      // ... existing code ...\n      towers.forEach((tower, j) => {\n        //... existing code ...\n          if (distance < 50) {\n              // New feature: increase coins after killing balloon\n              coins += score;\n              coinsEl.textContent = `Coins: ${coins}`;\n              // ... existing code ...\n          }\n       });\n    }\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div class=\"pathWay\"></div>\n    <div class=\"pathWay\"></div>\n    <div class=\"pathWay\"></div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are now functional</li>\n    <li>Pathways have increased turns</li>\n    <li>Added price to towers</li>\n    <li>Added pause functionality</li>\n    <li>Improved game performance</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": ".pathWay {\n    position: absolute;\n    width: 800px;\n    height: 50px;\n    background-color: #198754;\n    border: 2px solid black;\n    left: 100px;\n    top: 50px;\n}\n\n#coins {\n    margin: 0;\n}\n\n#gameArea .tower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: red;\n}\n\n#updateMenu{\n    display:none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathWays = document.getElementsByClassName('pathWay');\nlet coinsEl = document.getElementById(\"coins\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\n\nlet coins = 100;\nlet towers = [];\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = true;\n    updateMenu.style.display = \"block\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    // Add your own logic for the tower here ...\n}\n\nfunction generateBalloon() {\n    // ... existing code ...\n    if (!gamePause){\n        let balloon = document.createElement(\"div\");\n        balloon.setAttribute(\"class\", \"balloon\");\n        let randomPathway = pathWays[Math.floor(Math.random() * pathWays.length)];\n        randomPathway.appendChild(balloon);\n    }\n}\n\nspawnButton.addEventListener('click', generateBalloon);\n\nsetInterval(() => {\n    if (!gamePause){\n      // ... existing code ...\n      towers.forEach((tower, j) => {\n        //... existing code ...\n          if (distance < 50) {\n              // New feature: increase coins after killing balloon\n              coins += score;\n              coinsEl.textContent = `Coins: ${coins}`;\n              balloons.shift();\n              // ... existing code ...\n          }\n       });\n    }\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div id=\"mainTower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are moveable now</li>\n    <li>Pathway segments are implemented</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #EEEEEE;\n}\n\n#mainPath {\n    position: absolute;\n    width: 50px;\n    height: 100%;\n    background-color: #198754;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n\n.pathSegment {\n    position: absolute;\n    width: 100%;\n    height: 33.33%;\n    background-color: #198754;\n}\n\n#mainTower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    bottom: 0;\n}\n\n#spawnPoint, #endPoint {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: blue;\n}\n\n#endPoint {\n    bottom: 0;\n}\n\n#gameArea .tower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: yellow;\n    cursor: move;\n}\n\n#updateMenu {\n    display: none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathSegments = document.querySelectorAll('#mainPath .pathSegment');\nlet coinsEl = document.getElementById(\"coins\");\nlet mainTower = document.getElementById('mainTower');\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet towers = [];\nlet health = 10;\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = true;\n    updateMenu.style.display = \"block\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    towerDraggable(tower);\n}\n\nsetInterval(() => {\n    if (!gamePause){\n      towers.forEach((tower, i) => {\n        let style = window.getComputedStyle(tower);\n        let matrix = new WebKitCSSMatrix(style.transform);\n        let posX = matrix.m41;\n        let posY = matrix.m42;\n\n        // logic for tower attack\n        if (distance(mainTower, posX, posY) < 50) {\n            health -= 1;\n            if (health <= 0) {\n                endGame();\n            }\n        }\n      });\n\n      // Spawn new balloons in intervals\n      if(Date.now() - lastSpawn > spawnInterval){\n          generateBalloon();\n          lastSpawn = Date.now();\n      }\n    }\n}, 100);\n\nspawnButton.addEventListener('click', generateBalloon);"
  },
  {
    "html": "",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #EEEEEE;\n}\n\n#mainPath {\n    position: absolute;\n    width: 50px;\n    height: 100%;\n    background-color: #198754;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n\n.pathSegment {\n    position: absolute;\n    width: 100%;\n    height: 33.33%;\n    background-color: #198754;\n}\n\n#mainTower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    bottom: 0;\n}\n\n#spawnPoint, #endPoint {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: blue;\n}\n\n#endPoint {\n    bottom: 0;\n}\n\n#gameArea .tower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: yellow;\n    cursor: move;\n}\n\n#gameArea .balloon {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: pink;\n    cursor: pointer;\n}\n\n#updateMenu {\n    display: none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathSegments = document.querySelectorAll('#mainPath .pathSegment');\nlet coinsEl = document.getElementById(\"coins\");\nlet mainTower = document.getElementById('mainTower\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet towers = [];\nlet health = 10;\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = true;\n    updateMenu.style.display = \"block\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    towerDraggable(tower);\n}\n\nfunction towerDraggable(tower){\n    tower.addEventListener(\"mousedown\", function(event) {\n        movingTower = tower;\n        offsetX = event.clientX - parseInt(tower.style.left);\n        offsetY = event.clientY - parseInt(tower.style.top);\n    });\n}\n\ndocument.addEventListener(\"mousemove\", function(event) {\n    if(movingTower != null) {\n        movingTower.style.left = `${event.clientX - offsetX}px`;\n        movingTower.style.top = `${event.clientY - offsetY}px`;\n    }\n});\n\ndocument.addEventListener(\"mouseup\", function(event) {\n    movingTower = null;\n});\n\nfunction distance(mainTower, posX, posY){\n    let towerPos = mainTower.getBoundingClientRect();\n    return Math.sqrt((towerPos.x-posX) ** 2 + (towerPos.y-posY) ** 2);\n}\n\nfunction generateBalloon() {\n    let balloon = document.createElement(\"div\");\n    balloon.setAttribute(\"class\", \"balloon\");\n    gameArea.appendChild(balloon);\n}\n\nsetInterval(() => {\n    if (!gamePause){\n      towers.forEach((tower, i) => {\n        let style = window.getComputedStyle(tower);\n        let matrix = new WebKitCSSMatrix(style.transform);\n        let posX = matrix.m41;\n        let posY = matrix.m42;\n\n        // logic for tower attack\n        if (distance(mainTower, posX, posY) < 50) {\n            health -= 1;\n            if (health <= 0) {\n                endGame();\n            }\n        }\n      });\n\n      // Spawn new balloons in intervals\n      if(Date.now() - lastSpawn > spawnInterval){\n          generateBalloon();\n          lastSpawn = Date.now();\n      }\n    }\n}, 100);\n\nspawnButton.addEventListener('click', generateBalloon);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div id=\"mainTower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are moveable now</li>\n    <li>Pathway segments are implemented</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #EEEEEE;\n}\n\n#mainPath {\n    position: absolute;\n    width: 50px;\n    height: 100%;\n    background-color: #198754;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n\n.pathSegment {\n    position: absolute;\n    width: 100%;\n    height: 33.33%;\n    background-color: #198754;\n}\n\n#mainTower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    bottom: 0;\n}\n\n#spawnPoint, #endPoint {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: blue;\n}\n\n#endPoint {\n    bottom: 0;\n}\n\n#gameArea .tower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: yellow;\n    cursor: move;\n}\n\n#updateMenu {\n    display: none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathSegments = document.querySelectorAll('#mainPath .pathSegment');\nlet coinsEl = document.getElementById(\"coins\");\nlet mainTower = document.getElementById(\"mainTower\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet towers = [];\nlet health = 10;\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = true;\n    updateMenu.style.display = \"block\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    towerDraggable(tower);\n}\n\nfunction towerDraggable(tower) {\n    tower.addEventListener('mousedown', function(e) {\n        tower.style.position = 'absolute';\n        tower.style.zIndex = 1000;\n        moveAt(e.pageY, e.pageX);\n        function moveAt(pageY, pageX) {\n            tower.style.left = pageX - tower.offsetWidth / 2 + 'px';\n            tower.style.top = pageY - tower.offsetHeight / 2 + 'px';\n        }\n        document.addEventListener('mousemove', onMouseMove);\n        tower.onmouseup = function() {\n            document.removeEventListener('mousemove', onMouseMove);\n            tower.onmouseup = null;\n        };\n        function onMouseMove(e) {\n            moveAt(e.pageY, e.pageX);\n        }\n        tower.ondragstart = function() {\n            return false;\n        };\n    });\n}\n\nfunction distance(mainTower, posX, posY) {\n    let rect = mainTower.getBoundingClientRect();\n    let dist = Math.sqrt(Math.pow(posX - rect.top, 2) + Math.pow(posY - rect.left, 2));\n    return dist;\n}\n\nfunction generateBalloon() {\n  const spawnArea = document.getElementById(\"spawnPoint\");\n  let balloon = document.createElement(\"div\");\n  balloon.style.left = spawnArea.style.left;\n  balloon.style.top = spawnArea.style.top;\n  balloon.style.background = \"purple\";\n  balloon.style.width = \"50px\";\n  balloon.style.height = \"50px\";\n  balloon.style.position = \"absolute\";\n  balloon.class = \"balloon\";\n  document.getElementById(\"gameArea\").appendChild(balloon);\n}\n\nsetInterval(() => {\n    if (!gamePause){\n      towers.forEach((tower, i) => {\n        let style = window.getComputedStyle(tower);\n        let matrix = new WebKitCSSMatrix(style.transform);\n        let posX = matrix.m41;\n        let posY = matrix.m42;\n\n        // logic for tower attack\n        if (distance(mainTower, posX, posY) < 50) {\n            health -= 1;\n            if (health <= 0) {\n                endGame();\n            }\n        }\n      });\n\n      // Spawn new balloons in intervals\n      if(Date.now() - lastSpawn > spawnInterval){\n          generateBalloon();\n          lastSpawn = Date.now();\n      }\n    }\n}, 100);\n\nspawnButton.addEventListener('click', generateBalloon);\n\nfunction endGame() {\n    alert('Game Over');\n    location.reload();\n}"
  },
  {
    "html": "",
    "css": ".balloon {\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background-color: pink;\n}",
    "javascript": "let gameArea = document.getElementById(\"gameArea\");\nlet mainPath = document.getElementById(\"mainPath\");\nlet endPoint = document.getElementById(\"endPoint\");\nlet balloons = [];\n\nfunction animateBalloon(balloon) {\n    let startPos = parseInt(balloon.style.left);\n    let endPos = parseInt(endPoint.style.left);\n    let speed = 1; \n    let id = setInterval(frame, 10);\n    function frame() {\n        if (startPos == endPos || gamePause) {\n            clearInterval(id);\n        } else {\n            startPos++; \n            balloon.style.left = startPos + 'px'; \n        }\n    }\n}\n\nlet spawnButton = document.getElementById(\"spawnButton\");\n\nspawnButton.addEventListener('click', generateBalloon);\n\nfunction generateBalloon() {\n    let balloon = document.createElement(\"div\");\n    balloon.setAttribute(\"class\", \"balloon\");\n    balloon.style.left = spawnPoint.style.left;\n    balloon.style.top = spawnPoint.style.top;\n    gameArea.appendChild(balloon);\n    balloons.push(balloon);\n    animateBalloon(balloon);\n    balloon.onclick = function() { \n        balloon.remove(); \n        balloons.splice(balloons.indexOf(balloon), 1);\n        coins += 1; \n        coinsEl.textContent = `Coins: ${coins}`;\n    }\n}"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div id=\"mainTower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are moveable now</li>\n    <li>Pathway segments are implemented</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #EEEEEE;\n}\n\n#mainPath {\n    position: absolute;\n    width: 50px;\n    height: 100%;\n    background-color: #198754;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n\n.pathSegment {\n    position: absolute;\n    width: 100%;\n    height: 33.33%;\n    background-color: #198754;\n}\n\n#mainTower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    bottom: 0;\n}\n\n#spawnPoint, #endPoint {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: blue;\n}\n\n#endPoint {\n    bottom: 0;\n}\n\n#gameArea .tower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: yellow;\n    cursor: move;\n}\n\n#updateMenu {\n    display: none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathSegments = document.querySelectorAll('#mainPath .pathSegment');\nlet coinsEl = document.getElementById(\"coins\");\nlet livesEl = document.getElementById(\"lives\");\nlet scoreEl = document.getElementById(\"score\");\nlet mainTower = document.getElementById(\"mainTower\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet towers = [];\nlet health = 10;\nlet score = 0;\nlet lives = 100;\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = true;\n    updateMenu.style.display = \"block\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    towerDraggable(tower);\n}\n\nfunction towerDraggable(tower) {\n    tower.addEventListener('mousedown', function(e) {\n        tower.style.position = 'absolute';\n        tower.style.zIndex = 1000;\n        moveAt(e.pageY, e.pageX);\n        // so on...\n    });\n}\n\nfunction distance(mainTower, posX, posY) {\n    let rect = mainTower.getBoundingClientRect();\n    let dist = Math.sqrt(Math.pow(posX - rect.top, 2) + Math.pow(posY - rect.left, 2));\n    return dist;\n}\n\nfunction generateBalloon() {\n  // so on...\n}\n\nsetInterval(() => {\n    if (!gamePause){\n      towers.forEach((tower, i) => {\n        let style = window.getComputedStyle(tower);\n        let matrix = new WebKitCSSMatrix(style.transform);\n        let posX = matrix.m41;\n        let posY = matrix.m42;\n    });\n      if(Date.now() - lastSpawn > spawnInterval){\n          generateBalloon();\n          spawnInterval = spawnInterval - score * 5;\n          lastSpawn = Date.now();\n      }\n      //Balloon Movement\n      let balloons = document.querySelectorAll('.balloon');\n      balloons.forEach(b => {\n          if(parseInt(b.style.left) < 750) {\n              b.style.left = (parseInt(b.style.left) + 1).toString() + 'px';\n          } else if (parseInt(b.style.left) >= 750) {\n              b.remove();\n              lives -= 1;\n              livesEl.textContent = `Lives: ${lives}`;\n              if(lives <= 0) endGame();\n          }\n          towers.forEach(t => {\n              if(distance(t, parseInt(b.style.left), parseInt(b.style.top)) < 100){\n                  if(b){\n                      b.remove();\n                      score += 1;\n                      coins += 5;\n                      coinsEl.textContent = `Coins: ${coins}`;\n                      scoreEl.textContent = `Score: ${score}`;\n                  }\n              }\n          });\n      });\n    }\n}, 100);\n\nspawnButton.addEventListener('click', generateBalloon);\n\nfunction endGame() {\n    alert('Game Over!');\n    location.reload();\n}"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div id=\"mainTower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are movable now</li>\n    <li>Pathway segments are implemented</li>\n    <li>Added a pause button and an update menu</li>\n    <li>Added a shop to purchase new game pieces</li>\n    <li>Improved enemy spawning and movement</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #EEEEEE;\n}\n\n#mainPath {\n    position: absolute;\n    width: 50px;\n    height: 100%;\n    background-color: #198754;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n\n.pathSegment {\n    position: absolute;\n    width: 100%;\n    height: 33.33%;\n    background-color: #198754;\n}\n\n#mainTower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    bottom: 0;\n}\n\n#spawnPoint, #endPoint {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background-color: blue;\n}\n\n#endPoint {\n    bottom: 0;\n}\n\n#gameArea .tower {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    background: yellow;\n    cursor: move;\n}\n\n#updateMenu {\n    display: none;\n    position: absolute;\n    width: 300px;\n    height: 200px;\n    overflow: auto;\n    border: 1px solid black;\n    background: white;\n}",
    "javascript": "let pathSegments = document.querySelectorAll('#mainPath .pathSegment');\nlet coinsEl = document.getElementById(\"coins\");\nlet livesEl = document.getElementById(\"lives\");\nlet scoreEl = document.getElementById(\"score\");\nlet mainTower = document.getElementById(\"mainTower\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet towers = [];\nlet health = 10;\nlet score = 0;\nlet lives = 100;\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = !gamePause;\n    updateMenu.style.display = gamePause ? \"block\" : \"none\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    towerDraggable(tower);\n}\n\nfunction towerDraggable(tower) {\n    tower.addEventListener('mousedown', function(e) {\n        tower.style.position = 'absolute';\n        tower.style.zIndex = 1000;\n        moveAt(e.pageY, e.pageX);\n\n        function moveAt(pageY, pageX) {\n            tower.style.left = pageX + 'px';\n            tower.style.top = pageY + 'px';\n        }\n\n        function onMouseMove(event) {\n            moveAt(event.pageY, event.pageX);\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n\n        tower.onmouseup = function() {\n            document.removeEventListener('mousemove', onMouseMove);\n            tower.onmouseup = null;\n        };\n    });\n}\n\nfunction distance(mainTower, posX, posY) {\n    let rect = mainTower.getBoundingClientRect();\n    let dist = Math.sqrt(Math.pow(posX - rect.top, 2) + Math.pow(posY - rect.left, 2));\n    return dist;\n}\n\nfunction generateBalloon() {\n    let newBalloon = document.createElement('div');\n    newBalloon.style.position = 'absolute';\n    newBalloon.style.left = '0px';\n    newBalloon.style.top = '50px';\n    newBalloon.style.width = '50px';\n    newBalloon.style.height = '50px';\n    newBalloon.style.backgroundColor = 'green';\n    newBalloon.classList.add('balloon');\n    document.getElementById('gameArea').appendChild(newBalloon);\n}\n\nsetInterval(() => {\n    if (!gamePause){\n        if(Date.now() - lastSpawn > spawnInterval){\n            generateBalloon();\n            spawnInterval = spawnInterval - score * 5;\n            lastSpawn = Date.now();\n        }\n        //Balloon Movement\n        let balloons = document.querySelectorAll('.balloon');\n        balloons.forEach(b => {\n            if(parseInt(b.style.left) < 750) {\n                b.style.left = (parseInt(b.style.left) + 1).toString() + 'px';\n            } else if (parseInt(b.style.left) >= 750) {\n                if (b.parentNode != null) {\n                    b.parentNode.removeChild(b);\n                }\n                lives -= 1;\n                livesEl.textContent = `Lives: ${lives}`;\n                if(lives <= 0) endGame();\n            }\n            towers.forEach(t => {\n                if(distance(t, parseInt(b.style.left), parseInt(b.style.top)) < 100){\n                    if(b.parentNode != null) {\n                        b.parentNode.removeChild(b);\n                    }\n                    score += 1;\n                    coins += 5;\n                    coinsEl.textContent = `Coins: ${coins}`;\n                    scoreEl.textContent = `Score: ${score}`;\n                }\n            });\n        });\n    }\n}, 100);\n\nspawnButton.addEventListener('click', generateBalloon);\n\nfunction endGame() {\n    alert('Game Over!');\n    location.reload();\n}"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div id=\"mainTower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n  <p>Updates:</p>\n  <ul id=\"updates\">\n    <li>Towers are movable now</li>\n    <li>Pathway segments are implemented</li>\n    <li>Added a pause button and an update menu</li>\n    <li>Added a shop to purchase new game pieces</li>\n    <li>Improved enemy spawning and movement</li>\n    <li>Added sound effects</li>\n    <li>Enhanced tower shooting</li>\n  </ul>\n  <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<audio id=\"shootSound\" src=\"shoot.mp3\"></audio>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n  position: relative;\n  width: 800px;\n  height: 800px;\n  background-color: #EEEEEE;\n}\n\n#mainPath {\n  position: absolute;\n  width: 50px;\n  height: 100%;\n  background-color: #198754;\n  left: 50%;\n  top: 0;\n  transform: translateX(-50%);\n}\n\n.pathSegment {\n  position: absolute;\n  width: 100%;\n  height: 33.33%;\n  background-color: #198754;\n}\n\n#mainTower {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: red;\n  bottom: 0;\n}\n\n#spawnPoint, #endPoint {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: blue;\n}\n\n#endPoint {\n  bottom: 0;\n}\n\n#gameArea .tower {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background: yellow;\n  cursor: move;\n}\n\n#updateMenu {\n  display: none;\n  position: absolute;\n  width: 300px;\n  height: 200px;\n  overflow: auto;\n  border: 1px solid black;\n  background: white;\n}\n\n.balloon {\n  background: green;\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  transition: left 2s linear;\n}",
    "javascript": "let pathSegments = document.querySelectorAll('#mainPath .pathSegment');\nlet coinsEl = document.getElementById(\"coins\");\nlet livesEl = document.getElementById(\"lives\");\nlet scoreEl = document.getElementById(\"score\");\nlet mainTower = document.getElementById(\"mainTower\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet shootSound = document.getElementById(\"shootSound\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet towers = [];\nlet health = 10;\nlet score = 0;\nlet lives = 100;\n\nspawnButton.addEventListener('click', generateBalloon);\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        generateTower();\n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = !gamePause;\n    updateMenu.style.display = gamePause ? \"block\" : \"none\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction generateTower() {\n    let tower = document.createElement(\"div\");\n    tower.setAttribute(\"class\", \"tower\");\n    gameArea.appendChild(tower);\n    towers.push(tower);\n    towerDraggable(tower);\n    tower.addEventListener(\"click\", () => {\n        tower.style.backgroundColor = \"blue\"; // Color changes when tower is shooting\n        shootSound.play();\n        setTimeout(() => { tower.style.backgroundColor = \"yellow\"; }, 500);\n    });\n}\n\nfunction towerDraggable(tower) {\n    tower.addEventListener('mousedown', function(e) {\n        tower.style.position = 'absolute';\n        tower.style.zIndex = 1000;\n        moveAt(e.pageY, e.pageX);\n\n        function moveAt(pageY, pageX) {\n            tower.style.left = pageX + 'px';\n            tower.style.top = pageY + 'px';\n        }\n        \n        function onMouseMove(event) {\n            moveAt(event.pageY, event.pageX);\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n\n        tower.onmouseup = function() {\n            document.removeEventListener('mousemove', onMouseMove);\n            tower.onmouseup = null;\n        };\n    });\n}\n\nfunction distance(mainTower, posX, posY) {\n    let rect = mainTower.getBoundingClientRect();\n    let dist = Math.sqrt(Math.pow(posX - rect.top, 2) + Math.pow(posY - rect.left, 2));\n    return dist;\n}\n\nfunction generateBalloon() {\n    let newBalloon = document.createElement('div');\n    newBalloon.classList.add('balloon');\n    gameArea.appendChild(newBalloon);\n    setTimeout(()=> {\n        let balloonWidth = newBalloon.offsetWidth;\n        newBalloon.style.left = (gameArea.offsetWidth - balloonWidth * 2) + \"px\";\n    }, 1000);\n}\n\n// Use setInterval for continuous actions\nsetInterval(() => {\n    if(!gamePause){\n        if (Date.now() - lastSpawn > spawnInterval) {\n            generateBalloon();\n            spawnInterval = spawnInterval - Math.max(score * 5, 1);\n            lastSpawn = Date.now();\n        }\n        \n        // Balloon Movement Logic Upgraded with Enhanced Styling\n        let balloons = document.querySelectorAll('.balloon');\n        let speed = 1;\n        balloons.forEach((b) => {\n            speed += score / 25;\n            b.style.transitionDuration = speed + \"s\";\n            b.style.left = gameArea.offsetWidth - b.offsetWidth + \"px\";\n            if (parseInt(b.style.left) >= gameArea.offsetWidth - b.offsetWidth * 2) {\n                lives--;\n                livesEl.textContent = `Lives: ${lives}`;\n                if (lives <= 0) endGame();\n                b.parentNode.removeChild(b);\n            }\n            \n            towers.forEach((t) => {\n                // New conditions for tower shooting\n                if(distance(t, parseInt(b.style.left), parseInt(b.style.top)) < 100 && t.style.backgroundColor !== \"blue\"){\n                    t.click(); // Simulates the tower shooting\n                    score += 1;\n                    coins += 5;\n                    coinsEl.textContent = `Coins: ${coins}`;\n                    scoreEl.textContent = `Score: ${score}`;\n                    if(b.parentNode)\n                        b.parentNode.removeChild(b);\n                }\n            });\n        });\n    }\n}, 100);\n\nfunction endGame() {\n    alert('Game Over!');\n    location.reload();\n}"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div id=\"mainTower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n    <p>Updates:</p>\n    <ul id=\"updates\">\n        <li>Towers are now drag and drop to be relocated</li>\n        <li>Improved path segment implementation for tower placement</li>\n        <li>Implemented a pause button function</li>\n        <li>Improved purchase feature for game elements</li>\n        <li>Upgraded enemy spawning and navigation</li>\n        <li>Upgraded tower attacking mechanism</li>\n    </ul>\n    <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    width: 800px;\n    height: 800px;\n    position: relative;\n    background-color: lightblue;\n    overflow: hidden;\n    user-select: none;\n}\n\n#startButton {\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n\n#mainPath {\n    width: 100%;\n    height: 100%;\n    background-color: lightgray;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n}\n\n.pathSegment {\n    width: 70px;\n    height: 70px;\n    margin: 5px;\n    background-color: #5cb85c;\n    border: 1px solid black;\n}\n\n.tower {\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    position: absolute;\n    cursor: move;\n    z-index: 2;\n}\n\n#updateMenu {\n    display: none;\n    width: 300px;\n    height: 150px;\n    position: absolute;\n    border: 1px solid black;\n    background-color: white;\n    top: 500px;\n    left: 250px;\n    z-index: 3;\n}\n\n#gameStatus {\n    position: fixed;\n}\n\n#score, #lives, #coins {\n    font-size: 2em;\n    color: black;\n}\n\n.balloon {\n    position: absolute;\n    background: pink;\n    border: 2px solid #5cb85c;\n    border-radius: 100%;\n    width: 40px;\n    height: 40px;\n    transition: left 1s linear;\n}",
    "javascript": "let path = document.getElementById(\"mainPath\");\nlet balloonElements = document.getElementById(\"gameArea\");\nlet coinsEl = document.getElementById(\"coins\");\nlet livesEl = document.getElementById(\"lives\");\nlet scoreEl = document.getElementById(\"score\");\nlet mainTower = document.getElementById(\"mainTower\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet score = 0;\nlet lives = 100;\n\nspawnButton.addEventListener('click', generateBalloon);\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        buyTower();  \n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = !gamePause;\n    updateMenu.style.display = gamePause ? \"block\" : \"none\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction buyTower() {\n    let tower = document.createElement(\"div\");\n    tower.classList.add(\"tower\");\n    gameArea.appendChild(tower);\n    setActiveTower(tower);\n}\n\nfunction setActiveTower(tower) {\n    tower.addEventListener('mousedown', function(e) {\n        tower.style.position = 'absolute';\n        tower.style.zIndex = 1000;\n        moveAt(e.pageY, e.pageX);\n\n        function moveAt(pageY, pageX) {\n            tower.style.left = pageX - 25 + 'px'; // 25 to align the center of the tower\n            tower.style.top = pageY - 25 + 'px'; \n        }\n        \n        function onMove(e) {\n            moveAt(e.pageY, e.pageX);\n        }\n\n        document.addEventListener('mousemove', onMove);\n\n        tower.onmouseup = function() {\n            document.removeEventListener('mousemove', onMove);\n            tower.onmouseup = null;\n        };\n    });\n}\n\nfunction generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    gameArea.appendChild(balloon);\n    moveBalloon(balloon);\n}\n\nfunction moveBalloon(balloon) {\n    let position = 0;\n    let speed = Math.floor(Math.random() * 4 + 2);\n    let interval = setInterval(() => {\n        if (gamePause) clearInterval(interval);\n        if (position >= balloonElements.clientWidth) {\n            removeBalloon(balloon);\n            if (lives > 0) lives--;\n            if (lives <= 0) gameover();\n            else livesEl.innerText = 'Lives: ' + lives;\n            clearInterval(interval);\n        }\n        position += speed;\n        balloon.style.left = position + 'px';\n    }, 50);\n}\n\nfunction gameover() {\n    let balloons = document.getElementsByClassName('balloon');\n    while(balloons[0]) {\n        balloons[0].parentNode.removeChild(balloons[0]);\n    }\n    alert('Game over! Your score was: ' + score);\n}\n\nfunction removeBalloon(balloon) {\n    balloon.parentElement.removeChild(balloon);\n}\n\nballoonElements.addEventListener('click', function(e) {\n    if (e.target && e.target.nodeName == 'DIV' && e.target.classList.contains('tower')) {\n        let closestElement = document.elementFromPoint(e.pageX, e.pageY);\n        if (closestElement && closestElement.classList.contains('balloon')) {\n            removeBalloon(closestElement);\n            score++;\n            coins += 5;\n            scoreEl.innerText = 'Score: ' + score;\n            coinsEl.innerText = 'Coins: ' + coins;\n        }\n    }\n}, false);\n\nsetInterval(() => {\n    if(!gamePause){\n        if (Date.now() - lastSpawn > spawnInterval){\n            generateBalloon();\n            lastSpawn = Date.now();\n        }\n    }\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n    </div>\n    <div id=\"towersArea\">\n        <div class=\"tower\"></div>\n    </div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n    <p>Updates:</p>\n    <ul id=\"updates\">\n        <li>Towers are now drag and drop to be relocated</li>\n        <li>Improved path segment implementation for tower placement</li>\n        <li>Implemented pause button functionality</li>\n        <li>Improved enemy spawning and navigation</li>\n        <li>Upgraded enemy tower's attacking algorithm</li>\n    </ul>\n    <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    width: 800px;\n    height: 800px;\n    position: relative;\n    background-color: lightblue;\n    overflow: hidden;\n    user-select: none;\n}\n\n#mainPath {\n    width: 100%;\n    height: 50%;\n    background-color: lightgray;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n}\n\n.pathSegment {\n    width: 70px;\n    height: 70px;\n    margin: 5px;\n    background-color: #5cb85c;\n    border: 1px solid black;\n}\n\n#towersArea {\n    width: 100%;\n    height: 50%;\n    background-color: gray;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n}\n\n.tower {\n    width: 50px;\n    height: 50px;\n    background-color: red;\n    position: absolute;\n    cursor: move;\n    z-index: 2;\n}\n\n#updateMenu {\n    display: none;\n    width: 300px;\n    height: 150px;\n    position: absolute;\n    border: 1px solid black;\n    background-color: white;\n    top: 500px;\n    left: 250px;\n    z-index: 3;\n}\n\n#gameStatus {\n    position: fixed;\n}\n\n#score, #lives, #coins {\n    font-size: 2em;\n    color: black;\n}\n\n.balloon {\n    position: absolute;\n    background: pink;\n    border: 2px solid #5cb85c;\n    border-radius: 100%;\n    width: 40px;\n    height: 40px;\n    transition: left 1s linear;\n}",
    "javascript": "let path = document.getElementById(\"mainPath\");\nlet balloonElements = document.getElementById(\"gameArea\");\nlet towerArea = document.getElementById(\"towersArea\");\nlet coinsEl = document.getElementById(\"coins\");\nlet livesEl = document.getElementById(\"lives\");\nlet scoreEl = document.getElementById(\"score\");\nlet towerPrice = 10;\nlet buyTowerButton = document.getElementById(\"buyTower\");\nlet updateMenu = document.getElementById(\"updateMenu\");\nlet gamePause = false;\nlet closeButton = document.getElementById(\"closeUpdates\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet spawnButton = document.getElementById(\"spawnButton\");\nlet lastSpawn = Date.now();\nlet spawnInterval = 5000;\n\nlet coins = 100;\nlet score = 0;\nlet lives = 100;\n\nspawnButton.addEventListener('click', generateBalloon);\n\nbuyTowerButton.addEventListener('click', function() {\n    if (coins >= towerPrice) {\n        coins -= towerPrice;\n        coinsEl.textContent = `Coins: ${coins}`;\n        buyTower();  \n    }\n});\n\npauseButton.addEventListener('click', function() {\n    gamePause = !gamePause;\n    updateMenu.style.display = gamePause ? \"block\" : \"none\";\n});\n\ncloseButton.addEventListener('click', function() {\n    gamePause = false;\n    updateMenu.style.display = \"none\";\n});\n\nfunction buyTower() {\n    let tower = document.createElement(\"div\");\n    tower.classList.add(\"tower\");\n    towerArea.appendChild(tower);\n    setActiveTower(tower);\n}\n\nfunction setActiveTower(tower) {\n    tower.addEventListener('mousedown', function(e) {\n        tower.style.position = 'absolute';\n        tower.style.zIndex = 1000;\n        moveAt(e.pageY, e.pageX);\n\n        function moveAt(pageY, pageX) {\n            tower.style.left = pageX - towerArea.offsetLeft - tower.offsetWidth / 2 + 'px';\n            tower.style.top = pageY - towerArea.offsetTop - tower.offsetHeight / 2 + 'px';\n        }\n\n        document.addEventListener('mousemove', onMove);\n\n        function onMove(e) {\n            moveAt(e.clientY, e.clientX);\n        }\n\n        tower.addEventListener('mouseup', function() {\n            document.removeEventListener('mousemove', onMove);\n        });\n    });\n}\n\nfunction generateBalloon() {\n    let balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    gameArea.appendChild(balloon);\n    moveBalloon(balloon);\n}\n\nfunction moveBalloon(balloon) {\n    let position = 0;\n    let speed = Math.floor(Math.random() * 4 + 2);\n    let interval = setInterval(() => {\n        if (gamePause) clearInterval(interval);\n        if (position >= balloonElements.clientWidth) {\n            removeBalloon(balloon);\n            decrementLives();\n            clearInterval(interval);\n        }\n        position += speed;\n        balloon.style.left = position + 'px';\n    }, 50);\n}\n\nfunction gameover() {\n    let balloons = document.getElementsByClassName('balloon');\n    while(balloons[0]) {\n        balloons[0].parentNode.removeChild(balloons[0]);\n    }\n    alert('Game over! Your score was: ' + score);\n}\n\nfunction decrementLives() {\n    if (lives > 0) lives--;\n    else gameover();\n    livesEl.innerText = 'Lives: ' + lives;\n}\n\nfunction removeBalloon(balloon) {\n    balloon.parentElement.removeChild(balloon);\n    incrementScore();\n}\n\nfunction incrementScore() {\n    score++;\n    coins += 5;\n    scoreEl.innerText = 'Score: ' + score;\n    coinsEl.innerText = 'Coins: ' + coins;\n}\n\ntowerArea.addEventListener('click', function(e) {\n    if (e.target && e.target.nodeName == 'DIV' && e.target.classList.contains('tower')) {\n        let closestElement = document.elementFromPoint(e.clientX, e.clientY);\n        if (closestElement && closestElement.classList.contains('balloon')) removeBalloon(closestElement);\n    }\n}, false);\n\nsetInterval(() => {\n    if(!gamePause && Date.now() - lastSpawn > spawnInterval) {\n        generateBalloon();\n        lastSpawn = Date.now();\n    }\n}, 100);"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n    </div>\n    <div id=\"towersArea\">\n        <div class=\"tower\"></div>\n    </div>\n    <div id=\"balloonsArea\"></div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n    <p>Updates:</p>\n    <ul id=\"updates\">\n        <li>Towers are now drag and drop to be relocated</li>\n        <li>Improved path segment implementation for tower placement</li>\n        <li>Implemented pause button functionality</li>\n        <li>Improved enemy spawning and navigation</li>\n        <li>Upgraded enemy tower's attacking algorithm</li>\n    </ul>\n    <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #87CEEB;\n    overflow: hidden;\n    user-select: none;\n}\n\n#mainPath {\n    position: relative;\n    width: 764px;\n    height: 50px;\n    left: 18px;\n    margin-top: 375px;\n    background-color: #808080;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\n#towersArea {\n    position: relative;\n    width: 100%;\n    height: 800px;\n}\n\n.pathSegment {\n    width: 250px;\n    height: 50px;\n    background-color: #708090;\n}\n\n.tower {\n    width: 50px;\n    height: 50px;\n    background-color: #8B4513;\n    border-radius: 50%;\n    position: absolute;\n    cursor: move;\n}\n\n.balloon {\n    width: 35px;\n    height: 35px;\n    background-color: #FF4500;\n    border-radius: 50%;\n    position: absolute;\n}\n\n#updateMenu {\n    width: 350px;\n    height: 250px;\n    position: absolute;\n    top: 275px;\n    left: 225px;\n    background-color: #FFFFFF;\n    border: 3px solid #000000;\n    display: none;\n}\n\n#gameStatus {\n    position: fixed;\n    right: 0;\n    top: 0;\n}\n\nbutton {\n    margin-top: 20px;\n}",
    "javascript": "document.getElementById('buyTower').addEventListener('click', createTower);\ndocument.getElementById('mainPath').addEventListener('click', e => moveTower(e));\ndocument.getElementById('spawnButton').addEventListener('click', spawnBalloon);\ndocument.getElementById('pauseButton').addEventListener('click', pauseGame); \ndocument.getElementById('closeUpdates').addEventListener('click', closeUpdates);\n\nlet draggingElement = null;\nlet updatesShown = false;\nlet gamePaused = false;\n\nconst colors = ['red', 'blue', 'yellow', 'green', 'purple'];\n\nfunction spawnBalloon() {\n    const balloon = document.createElement('div');\n    balloon.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    balloon.classList.add('balloon');\n\n    let position = 0;\n    let id = setInterval(frame, 10);\n\n    function frame() {\n        if (gamePaused || position === 770 || updatesShown) {\n            clearInterval(id);\n        }\n        position ++;\n        balloon.style.left = `${position}px`;\n\n        if (position === 770) {\n            removeBalloon(balloon);\n        } \n    }\n    document.getElementById('gameArea').appendChild(balloon);\n}\n\nfunction closeUpdates() {\n    document.getElementById('updateMenu').style.display = \"none\";\n    updatesShown = false;\n    // Un-pause game when closing update menu\n    gamePaused = false;\n    pauseGame();\n}\n\nfunction pauseGame() {\n    gamePaused = !gamePaused;\n    \n    if (gamePaused || updatesShown) {\n        document.getElementById('updateMenu').style.display = \"block\";\n        updatesShown = true;\n    } \n}\n\nfunction removeBalloon(balloon) {\n    balloon.parentNode.removeChild(balloon);\n}\n\nfunction createTower() {\n    const tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.drag = false;\n    document.getElementById('mainPath').appendChild(tower);\n}\n\nfunction moveTower(e) {\n    draggingElement = e.target;\n\n    if (draggingElement.tagName === 'DIV' && draggingElement.drag === false) {\n        draggingElement.style.left = `${e.clientX - 50}px`;\n        draggingElement.style.top = `${e.clientY - 50}px`;\n        draggingElement.drag = true;\n    } else if (draggingElement.tagName === 'DIV' && draggingElement.drag === true){\n        draggingElement.drag = false;\n    }\n}"
  },
  {
    "html": "<div id=\"gameArea\">\n    <div id=\"mainPath\">\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n        <div class=\"pathSegment\"></div>\n    </div>\n    <div id=\"towersArea\"></div>\n    <div id=\"spawnPoint\"></div>\n    <div id=\"balloonsArea\"></div>\n    <div id=\"endPoint\"></div>\n</div>\n<div id=\"updateMenu\">\n    <p>Updates:</p>\n    <ul id=\"updates\">\n        <li>Towers are now drag and drop to be relocated</li>\n        <li>Improved path segment implementation for tower placement</li>\n        <li>Implemented pause button functionality</li>\n        <li>Improved enemy spawning and navigation</li>\n        <li>Upgraded enemy tower's attacking algorithm</li>\n    </ul>\n    <button id=\"closeUpdates\">Close</button>\n</div>\n<div id=\"gameStatus\">\n    <div id=\"score\">Score: 0</div>\n    <div id=\"lives\">Lives: 100</div>\n    <div id=\"coins\">Coins: 100</div>\n</div>\n<div id=\"shop\">\n    <button id=\"buyTower\">Buy Tower (Cost: 10)</button>\n</div>\n<button id=\"pauseButton\">Pause</button>\n<button id=\"spawnButton\">Spawn</button>",
    "css": "#gameArea {\n    position: relative;\n    width: 800px;\n    height: 800px;\n    background-color: #87CEEB;\n    overflow: hidden;\n    user-select: none;\n}\n\n#mainPath {\n    position: relative;\n    width: 764px;\n    height: 50px;\n    left: 18px;\n    margin-top: 375px;\n    background-color: #808080;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\n#towersArea {\n    position: relative;\n    width: 100%;\n    height: 800px;\n}\n\n.pathSegment {\n    width: 250px;\n    height: 50px;\n    background-color: #708090;\n}\n\n.tower {\n    width: 50px;\n    height: 50px;\n    background-color: #8B4513;\n    border-radius: 50%;\n    position: relative;\n    cursor: move;\n}\n\n.balloon {\n    width: 30px;\n    height: 30px;\n    background-color: #FF4500;\n    border-radius: 50%;\n    position: relative;\n    left: 0px;\n}\n\n#updateMenu {\n    width: 350px;\n    height: 250px;\n    position: absolute;\n    top: 275px;\n    left: 225px;\n    background-color: #FFFFFF;\n    border: 3px solid #000000;\n    display: none;\n}\n\n#gameStatus {\n    position: fixed;\n    right: 0;\n    top: 0;\n}\n\nbutton {\n    margin-top: 20px;\n}",
    "javascript": "function pauseGame() {\n    gamePaused = !gamePaused;\n    if (gamePaused || updatesShown) {\n        document.getElementById('pauseButton').innerText = 'Continue';   \n        document.getElementById('updateMenu').style.display = \"block\";\n        updatesShown = true;\n    } else {\n        document.getElementById('pauseButton').innerText = 'Pause';   \n        document.getElementById('updateMenu').style.display = \"none\";\n        updatesShown = false; \n    }  \n}\n\nfunction closeUpdates() {\n    document.getElementById('updateMenu').style.display = \"none\";\n    updatesShown = false;\n    pauseGame();\n} \n\nfunction createTower() {\n    const tower = document.createElement('div');\n    tower.classList.add('tower');\n    document.getElementById('gameArea').appendChild(tower);\n    tower.draggable = true;\n    tower.addEventListener('dragstart', (e) => {\n        e.dataTransfer.setData('text/plain', e.target.id);\n        draggingElement = e.target;\n    });\n}\n\nfunction spawnBalloon() {\n    const balloon = document.createElement('div');\n    balloon.classList.add('balloon');\n    document.getElementById('balloonsArea').appendChild(balloon);\n    balloon.style.left = '0px';\n    let id = setInterval(frame, 10);\n    function frame() {\n        if(gamePaused || updatesShown || parseFloat(balloon.style.left) > 770){\n            clearInterval(id);\n            balloon.remove();\n        }\n        balloon.style.left = `${parseFloat(balloon.style.left)+1}px`\n    }\n}\n\ndocument.getElementById('buyTower').addEventListener('click', createTower);\ndocument.getElementById('spawnButton').addEventListener('click', spawnBalloon);\ndocument.getElementById('pauseButton').addEventListener('click',pauseGame);\ndocument.getElementById('closeUpdates').addEventListener('click', closeUpdates);\n\nlet draggingElement = null;\nlet updatesShown = false;\nlet gamePaused = false;\nlet colors = ['red', 'blue', 'yellow', 'green', 'purple'];\n\ndocument.body.addEventListener('dragover', (e) => {\n    e.preventDefault();\n    if (draggingElement) {\n        draggingElement.style.left = `${e.clientX - 25}px`;\n        draggingElement.style.top = `${e.clientY - 25}px`;\n    }\n});\n\ndocument.body.addEventListener('dragend', (e) => {\n    if (draggingElement) {\n        draggingElement.style.left = `${e.clientX - 25}px`;\n        draggingElement.style.top = `${e.clientY - 25}px`;\n        draggingElement = null;\n    }\n});"
  },
  {
    "html": "",
    "css": "",
    "javascript": ""
  }
]